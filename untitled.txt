<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Instagram Video Downloader</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">

    <style>
        /* General Styles */
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #00bcd4, #ff4081);
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            color: white;
        }

        .container {
            background-color: rgba(255, 255, 255, 0.9);
            padding: 40px 50px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 500px;
        }

        h1 {
            font-size: 32px;
            font-weight: 600;
            color: #333;
            margin-bottom: 15px;
        }

        p {
            font-size: 18px;
            color: #555;
            margin-bottom: 20px;
        }

        input {
            width: 100%;
            padding: 12px;
            margin-bottom: 20px;
            border: 2px solid #ddd;
            border-radius: 10px;
            font-size: 16px;
            box-sizing: border-box;
            outline: none;
            transition: border-color 0.3s;
        }

        input:focus {
            border-color: #ff4081;
        }

        input::placeholder {
            color: #aaa;
        }

        .btn {
            background-color: #ff4081;
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            border: none;
            cursor: pointer;
            font-size: 18px;
            width: 100%;
            transition: background-color 0.3s, transform 0.3s;
        }

        .btn:hover {
            background-color: #f50057;
            transform: scale(1.05);
        }

        .btn:active {
            transform: scale(0.98);
        }

        .quality-options {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-top: 20px;
        }

        .quality-btn {
            background-color: #ff4081;
            color: white;
            padding: 12px 20px;
            border-radius: 10px;
            border: none;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s, transform 0.3s;
            width: 100%;
        }

        .quality-btn:hover {
            background-color: #f50057;
            transform: scale(1.05);
        }

        .quality-btn:active {
            transform: scale(0.98);
        }

        .loading {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #ff4081;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1.5s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        #download-link a {
            color: #ff4081;
            font-size: 18px;
            text-decoration: none;
            margin-top: 20px;
            display: inline-block;
            font-weight: 600;
        }

        #download-link a:hover {
            text-decoration: underline;
        }

        .download-link {
            background-color: #ff4081;
            padding: 15px 25px;
            border-radius: 10px;
            color: white;
            font-size: 18px;
            text-decoration: none;
            display: inline-block;
            transition: background-color 0.3s, transform 0.3s;
        }

        .download-link:hover {
            background-color: #f50057;
            transform: scale(1.05);
        }

        .download-link:active {
            transform: scale(0.98);
        }

        @media (max-width: 768px) {
            .container {
                padding: 20px 30px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Instagram Video Downloader</h1>
        <p>Paste your Instagram video URL below and click on "Download".</p>
        <input type="text" id="videoUrl" placeholder="Enter Instagram Video URL" />
        
        <button id="showQualityOptionsBtn" class="btn" onclick="showQualityOptions()">Download</button>
        
        <div id="qualityOptions" class="quality-options" style="display:none;">
            <button class="quality-btn" onclick="selectQuality('low')">Low Quality</button>
            <button class="quality-btn" onclick="selectQuality('medium')">Medium Quality</button>
            <button class="quality-btn" onclick="selectQuality('high')">High Quality</button>
        </div>

        <div id="loading" class="loading" style="display:none;">
            <div class="spinner"></div>
            <p>Downloading...</p>
        </div>
        
        <div id="download-link" style="display:none;">
            <a id="downloadBtn" href="#" class="download-link" download>Click here to download the video</a>
        </div>
    </div>

    <script>
        function showQualityOptions() {
            const videoUrl = document.getElementById('videoUrl').value;
            if (!videoUrl) {
                alert('Please enter a video URL!');
                return;
            }

            // Hide the initial button and show quality options
            document.getElementById('showQualityOptionsBtn').style.display = 'none';
            document.getElementById('qualityOptions').style.display = 'flex';
        }

        function selectQuality(quality) {
            // Show loading animation
            document.getElementById('loading').style.display = 'flex';
            document.getElementById('download-link').style.display = 'none';

            // Simulate a delay for downloading
            setTimeout(() => {
                // Simulate the video download link generation
                const downloadLink = generateDownloadLink(quality);

                // Hide the loading animation and show the download link
                document.getElementById('loading').style.display = 'none';
                const downloadBtn = document.getElementById('downloadBtn');
                downloadBtn.href = downloadLink;
                document.getElementById('download-link').style.display = 'block';
            }, 2000);  // Simulating a 2-second delay
        }

        function generateDownloadLink(quality) {
            // Replace with actual logic to generate download link based on quality
            return `https://example.com/video?quality=${quality}`;
        }
    </script>
</body>
</html>